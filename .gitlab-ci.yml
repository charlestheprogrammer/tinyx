stages:
  - lint 💄
  - test 🧪
  - build 🏗
  - deploy 🚀

lint_frontend:
  stage: lint 💄
  image: node:20.0.0-alpine
  script:
    - npx prettier -c ./tinyx-frontend/src/**
  only:
    changes:
      - tinyx-frontend/**/*
    variables:
      - $CI_PIPELINE_SOURCE == 'merge_request_event'
      - $CI_COMMIT_BRANCH != 'main'

test:
  stage: test 🧪
  image: node:20.0.0-alpine
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH != 'main'
  script:
    - echo "Running tests..."

build_frontend:
  stage: build 🏗
  image: node:20.0.0-alpine
  script:
    - cd tinyx-frontend
    - npm install
    - npm run build
  only:
    changes:
      - tinyx-frontend/**/*
    variables:
      - $CI_PIPELINE_SOURCE == 'merge_request_event'
      - $CI_COMMIT_BRANCH == 'main'
  artifacts:
    paths:
      - tinyx-frontend/dist
    expire_in: 10 minutes

build_services:
  stage: build 🏗
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn clean install
    - cd repo-post
    - mvn package
    - cd ../tinyx-gateway
    - mvn package
  artifacts:
    paths:
      - repo-post/target/quarkus-app
      - tinyx-gateway/target/quarkus-app
    expire_in: 10 minutes
  
deploy_repo_post:
  stage: deploy 🚀
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - ./config.sh
    - cd repo-post
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-repo-post:latest"
    
  only:
    variables: 
      - $CI_COMMIT_BRANCH == "main"
    changes:
      - repo-post/**/*

deploy_tinyx_gateway:
  stage: deploy 🚀
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - ./config.sh
    - cd ../tinyx-gateway
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-gateway:latest"
  only:
    variables: 
      - $CI_COMMIT_BRANCH == "main"
    changes:
      - tinyx-gateway/**/*

deploy_frontend_to_s3:
  environment:
    name: prod_frontend
    url: http://tinyx.tech
  stage: deploy 🚀
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - aws s3 sync tinyx-frontend/dist/ s3://tinyx.tech --delete
  only:
    changes:
      - tinyx-frontend/**/*
    variables:
      - $CI_COMMIT_BRANCH == 'main'
