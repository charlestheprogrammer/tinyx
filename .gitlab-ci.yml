stages:
  - lint 💄
  - test 🧪
  - build 🏗
  - deploy 🚀

lint_frontend:
  stage: lint 💄
  image: node:20.0.0-alpine
  script:
    - npx prettier -c ./tinyx-frontend/src/**
  only:
    changes:
      - tinyx-frontend/**/*
    variables:
      - $CI_PIPELINE_SOURCE == 'merge_request_event'
      - $CI_COMMIT_BRANCH != 'main'

test:
  stage: test 🧪
  image: node:20.0.0-alpine
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH != 'main'
  script:
    - echo "Running tests..."

build_frontend:
  stage: build 🏗
  image: node:20.0.0-alpine
  script:
    - cd tinyx-frontend
    - npm install
    - npm run build
  only:
    changes:
      - tinyx-frontend/**/*
    variables:
      - $CI_PIPELINE_SOURCE == 'merge_request_event'
      - $CI_COMMIT_BRANCH == 'main'
  artifacts:
    paths:
      - tinyx-frontend/dist
    expire_in: 10 minutes

.build_services_template: &build_services
  stage: build 🏗
  image: maven:3.9.6-eclipse-temurin-17
  artifacts:
    expire_in: 10 minutes

build_service_post:
  <<: *build_services
  script:
    - mvn clean install
    - cd repo-post
    - mvn package
  artifacts:
    paths:
      - repo-post/target/quarkus-app

build_service_social:
  <<: *build_services
  script:
    - mvn clean install
    - cd repo-social
    - mvn package
  artifacts:
    paths:
      - repo-social/target/quarkus-app

build_service_home_timeline:
  <<: *build_services
  script:
    - mvn clean install
    - cd srvc-home-timeline
    - mvn package
  artifacts:
    paths:
      - srvc-home-timeline/target/quarkus-app

build_service_user_timeline:
  <<: *build_services
  script:
    - mvn clean install
    - cd srvc-user-timeline
    - mvn package
  artifacts:
    paths:
      - srvc-user-timeline/target/quarkus-app

build_service_search:
  <<: *build_services
  script:
    - mvn clean install
    - cd srvc-search
    - mvn package
  artifacts:
    paths:
      - srvc-search/target/quarkus-app

build_tiny_gateway:
  <<: *build_services
  script:
    - mvn clean install
    - cd tinyx-gateway
    - mvn package
  artifacts:
    paths:
      - tinyx-gateway/target/quarkus-app

.deploy_repo_template: &deploy_repo
  stage: deploy 🚀
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  only:
    variables: 
      - $CI_COMMIT_BRANCH == "32-kube-other-services"
    
.before_script_docker: &setup_kaniko_script
  - mkdir -p /kaniko/.docker
  - ./config.sh

deploy_repo_post:
  <<: *deploy_repo
  before_script:
    - *setup_kaniko_script
  script:
    - cd repo-post
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-repo-post:latest"
  only:
    changes:
      - repo-post/**/*

deploy_repo_social:
  <<: *deploy_repo
  before_script:
    - *setup_kaniko_script
  script:
    - cd repo-social
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-repo-social:latest"
  only:
    changes:
      - repo-social/**/*

deploy_home_timeline:
  <<: *deploy_repo
  before_script:
    - *setup_kaniko_script
  script:
    - cd srvc-home-timeline
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-home-timeline:latest"
  only:
    changes:
      - srvc-home-timeline/**/*

deploy_user_timeline:
  <<: *deploy_repo
  before_script:
    - *setup_kaniko_script
  script:
    - cd srvc-user-timeline
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-user-timeline:latest"
  only:
    changes:
      - srvc-user-timeline/**/*

deploy_search:
  <<: *deploy_repo
  before_script:
    - *setup_kaniko_script
  script:
    - cd srvc-search
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-search:latest"
  only:
    changes:
      - srvc-search/**/*

deploy_tinyx_gateway:
  <<: *deploy_repo
  before_script:
    - *setup_kaniko_script
  script:
    - cd tinyx-gateway
    - /kaniko/executor --context "$(pwd)" --dockerfile "$(pwd)/Dockerfile" --destination "${CI_REGISTRY_IMAGE}/tinyx-gateway:latest"
  only:
    changes:
      - tinyx-gateway/**/*

deploy_frontend_to_s3:
  environment:
    name: prod_frontend
    url: http://tinyx.tech
  stage: deploy 🚀
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - aws s3 sync tinyx-frontend/dist/ s3://tinyx.tech --delete
  only:
    changes:
      - tinyx-frontend/**/*
    variables:
      - $CI_COMMIT_BRANCH == 'main'
